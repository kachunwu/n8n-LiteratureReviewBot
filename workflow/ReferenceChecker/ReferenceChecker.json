{
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Your primary role is to rigorously fact-check the provided content generated by another AI agent, with a specific focus on the accuracy, existence, and APA style compliance of all citations and references. Use perplexity tool for this fact-checking task.\n\nHere's your workflow:\n\n1. Reference Existence Verification:\n- For every single item in the reference list, verify its actual existence. This means you must attempt to locate a verifiable source (e.g., a published paper, book, legitimate website, etc.) that matches the details provided in the reference.\n- If a reference cannot be found or appears to be fabricated, flag it immediately and note the specific reference in question.\n\n2. APA Style Formatting Check (In-text Citations):\n- Examine every in-text citation within the main body of the content.\n- Verify that each in-text citation adheres to the current APA style guidelines (e.g., author-date format, correct punctuation, etc.).\n- Ensure that every in-text citation has a corresponding entry in the reference list, and vice-versa.\n\n3. APA Style Formatting Check (Reference List):\n- Scrutinize every item in the reference list for strict adherence to current APA style guidelines. This includes, but is not limited to:\n- Correct author formatting (e.g., last name, initials).\n- Correct date formatting.\n- Proper title capitalization and italics for articles, books, journals, etc.\n- Correct journal volume, issue, and page number formatting.\n- Accurate DOI or URL inclusion and formatting.\n- Correct indentation (hanging indent).\n- Alphabetical order by the first author's last name.\n\n4. Correction and Reporting:\n- If a reference does not exist: Clearly state \"Reference does not exist\" and provide the exact reference as it was written in the original content.\n- If an in-text citation or reference list entry is incorrectly formatted: Provide the corrected version of the citation/reference according to current APA style. Do not just point out the error; actively correct it.\n- Present your findings in a clear, itemized list, detailing each issue found and its corresponding correction or flag.\n\nExample Output Format:\n- Issue Type: Reference Existence / In-text Citation Format / Reference List Format\n- Original (if applicable): [Original problematic text/reference]\n- Correction/Flag: [Corrected text/reference OR \"Reference does not exist\"]\n- Reason (brief): [e.g., \"Incorrect date format,\" \"Missing DOI,\" \"No verifiable source found\"]\n\nYour output must be a JSON object with a status field (either 'Errors Found' or 'No Errors') and an issues array. Each object in the issues array should have type, original, correction, and reason fields. If no errors are found, the issues array should be empty. Do not include any conversational text outside of this JSON."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -260,
        -160
      ],
      "id": "9b2a0e13-7333-4e57-ac3a-5ebb90628742",
      "name": "Reference Checker"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"status\": \"Errors Found\",\n  \"issues\": [\n    {\n      \"type\": \"Reference List Format\",\n      \"original\": \"Doe, J. (2023). A Sample Book. Publisher.\",\n      \"correction\": \"Doe, J. (2023). *A sample book*. Publisher.\",\n      \"reason\": \"Book title should be italicized and sentence-cased.\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        60,
        100
      ],
      "id": "98bb868a-d73d-4943-b910-1220b8a035de",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -500,
        -160
      ],
      "id": "84b33a53-49f5-4ce4-95bc-964155787256",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": "sonar",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        -140,
        100
      ],
      "id": "397ed130-d296-4ccf-82bb-391cc8c38438",
      "name": "Message a model in Perplexity",
      "credentials": {
        "perplexityApi": {
          "id": "RAuIH4jgvq6OWyr3",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        -360,
        100
      ],
      "id": "e227b46b-c7b9-4a71-be31-8f83a3a912c5",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "AOGwdIBmHMWxXW03",
          "name": "Azure Open AI account"
        }
      }
    }
  ],
  "connections": {
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Reference Checker",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Reference Checker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model in Perplexity": {
      "ai_tool": [
        [
          {
            "node": "Reference Checker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Reference Checker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "53bb6ae9edba87f5665bfe171794c2c54b3eebb2e169405dca019422cd62eea2"
  }
}
